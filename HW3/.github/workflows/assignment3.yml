name: Assignment 3 Workflow

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Generate log.txt file at the beginning
        if: always()
        run: |
          echo "$(TZ=Asia/Jerusalem date -Iminutes)" >> log.txt
          echo "Stav Yemin and Illay Bani" >> log.txt
      - name: Upload log.txt as an artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: log.txt
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and export
        uses: docker/build-push-action@v3
        with:
          context: .
          file: dockerfile
          tags: nutritionsvr-v2:latest, ${{ secrets.DOCKER_USERNAME }}/nutritionsvr-v2:latest
          outputs: type=docker,dest=/tmp/image.tar
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v3
        with:
          context: .
          file: dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/nutritionsvr-v2:latest
      - name: Download log file
        if: always()
        uses: actions/download-artifact@v2
        with:
          name: log
      - name: Generate log.txt file after successful build
        if: success()
        run: echo "image successfully built" >> log.txt
      - name: Generate log.txt file after unsuccessful build
        if: failure()
        run: echo "image not able to be built" >> log.txt
      - name: Upload log.txt as an artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: log.txt      
      

  test:
    needs: build
    runs-on: ubuntu-latest
    services: 
      nutritioncontainer:
        image: stavyem/nutritionsvr-v2:latest
        ports:
          - 8000:8000
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Download log file
        if: always()
        uses: actions/download-artifact@v2
        with:
          name: log
      - name: Update log.txt file after successful container running
        if: success()
        run: echo "Container up and running" >> log.txt
      - name: Update log.txt file after container failed running
        if: failure()
        run: echo "Container failed to run" >> log.txt
      - name: Upload log.txt as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: log.txt
      - name: Check if app is running
        run: docker ps
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run tests with pytest
        run: |
          pytest -v tests/assn3_tests.py > tests/assn3_test_results.txt
      - name: Update log.txt file after all tests succeeded
        if: success()
        run: echo "tests succeeded" >> log.txt
      - name: Update log.txt file after failed tests
        if: failure()
        run: echo "tests failed" >> log.txt
      - name: upload log file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: log.txt
      - name: upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: GH_test_results
          path: tests/assn3_test_results.txt


  query:
    needs: test
    runs-on: ubuntu-latest
    services: 
      nutritioncontainer:
        image: stavyem/nutritionsvr-v2:latest
        ports:
          - 8000:8000
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run queries and generate response.txt
        run: |
          cat query.txt | while read -r line; do
            id=$(curl -s -X POST -H "Content-Type: application/json" -d "{\"name\": \"$line\"}" http://127.0.0.1:8000/dishes)
            calories=$(curl -s http://127.0.0.1:8000/dishes/$id | jq -r ".cal")
            sodium=$(curl -s http://127.0.0.1:8000/dishes/$id | jq -r ".sodium")
            sugar=$(curl -s http://127.0.0.1:8000/dishes/$id | jq -r ".sugar")
            echo "$line contains $calories calories, $sodium mgs of sodium, and $sugar grams of sugar" >> response.txt
          done
      - name: Upload response.txt
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: response
          path: response.txt